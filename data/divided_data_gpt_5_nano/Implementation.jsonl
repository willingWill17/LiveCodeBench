{"question_id": "abc364_b", "question_title": "Grid Walk", "question_content": "There is a grid with H rows and W columns. Let (i, j) denote the cell at the i-th row from the top and j-th column from the left.\nCell (i, j) is empty if C_{i, j} is ., and not empty if C_{i, j} is #.\nTakahashi is currently at cell (S_i, S_j), and he will act according to the following rules for i = 1, 2, \\ldots, |X| in order.\n\n- If the i-th character of X is L, and the cell to the left of his current cell exists and is empty, he moves to the cell to the left. Otherwise, he stays in the current cell.\n- If the i-th character of X is R, and the cell to the right of his current cell exists and is empty, he moves to the cell to the right. Otherwise, he stays in the current cell.\n- If the i-th character of X is U, and the cell above his current cell exists and is empty, he moves to the cell above. Otherwise, he stays in the current cell.\n- If the i-th character of X is D, and the cell below his current cell exists and is empty, he moves to the cell below. Otherwise, he stays in the current cell.\n\nPrint the cell where he is after completing the series of actions.\n\nInput\n\nThe input is given from Standard Input in the following format:\nH W\r\nS_i S_j\r\nC_{1, 1}C_{1, 2}\\ldotsC_{1, W}\r\nC_{2, 1}C_{2, 2}\\ldotsC_{2, W}\r\n\\vdots\r\nC_{H, 1}C_{H, 2}\\ldotsC_{H, W}\r\nX\n\nOutput\n\nLet (x, y) be the cell where Takahashi is after completing the series of actions. Print x and y, separated by a space.\n\nConstraints\n\n\n- 1 \\leq H, W \\leq 50\n- 1 \\leq S_i \\leq H\n- 1 \\leq S_j \\leq W\n- H, W, S_i, S_j are integers.\n- C_{i, j} is . or #.\n- C_{S_i, S_j} = .\n- X is a string of length between 1 and 50, inclusive, consisting of L, R, U, D.\n\nSample Input 1\n\n2 3\r\n2 1\r\n.#.\r\n...\r\nULDRU\n\nSample Output 1\n\n2 2\r\n\nTakahashi starts at cell (2, 1). His series of actions are as follows:\n\n- The 1st character of X is U, and the cell above (2, 1) exists and is an empty cell, so he moves to the cell above, which is (1, 1).\n- The 2nd character of X is L, and the cell to the left of (1, 1) does not exist, so he stays at (1, 1).\n- The 3rd character of X is D, and the cell below (1, 1) exists and is an empty cell, so he moves to the cell below, which is (2, 1).\n- The 4th character of X is R, and the cell to the right of (2, 1) exists and is an empty cell, so he moves to the cell to the right, which is (2, 2).\n- The 5th character of X is U, and the cell above (2, 2) exists but is not an empty cell, so he stays at (2, 2).\n\nTherefore, after completing the series of actions, he is at cell (2, 2).\n\nSample Input 2\n\n4 4\r\n4 2\r\n....\r\n.#..\r\n...#\r\n....\r\nDUUUURULRD\n\nSample Output 2\n\n2 4\n\nSample Input 3\n\n6 6\r\n1 1\r\n.#####\r\n######\r\n######\r\n######\r\n######\r\n######\r\nRURLDLULLRULRDL\n\nSample Output 3\n\n1 1", "difficulty": "easy", "starter_code": "", "public_test_cases": "[{\"input\": \"2 3\\n2 1\\n.#.\\n...\\nULDRU\\n\", \"output\": \"2 2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"4 4\\n4 2\\n....\\n.#..\\n...#\\n....\\nDUUUURULRD\\n\", \"output\": \"2 4\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6 6\\n1 1\\n.#####\\n######\\n######\\n######\\n######\\n######\\nRURLDLULLRULRDL\\n\", \"output\": \"1 1\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "3533", "question_title": "snake-in-matrix", "question_content": "There is a snake in an n x n matrix grid and can move in four possible directions. Each cell in the grid is identified by the position: grid[i][j] = (i * n) + j.\nThe snake starts at cell 0 and follows a sequence of commands.\nYou are given an integer n representing the size of the grid and an array of strings commands where each command[i] is either \"UP\", \"RIGHT\", \"DOWN\", and \"LEFT\". It's guaranteed that the snake will remain within the grid boundaries throughout its movement.\nReturn the position of the final cell where the snake ends up after executing commands.\n \nExample 1:\n\nInput: n = 2, commands = [\"RIGHT\",\"DOWN\"]\nOutput: 3\nExplanation:\n\n\n\n\n0\n1\n\n\n2\n3\n\n\n\n\n\n\n0\n1\n\n\n2\n3\n\n\n\n\n\n\n0\n1\n\n\n2\n3\n\n\n\n\n\nExample 2:\n\nInput: n = 3, commands = [\"DOWN\",\"RIGHT\",\"UP\"]\nOutput: 1\nExplanation:\n\n\n\n\n0\n1\n2\n\n\n3\n4\n5\n\n\n6\n7\n8\n\n\n\n\n\n\n0\n1\n2\n\n\n3\n4\n5\n\n\n6\n7\n8\n\n\n\n\n\n\n0\n1\n2\n\n\n3\n4\n5\n\n\n6\n7\n8\n\n\n\n\n\n\n0\n1\n2\n\n\n3\n4\n5\n\n\n6\n7\n8\n\n\n\n\n\n \nConstraints:\n\n2 <= n <= 10\n1 <= commands.length <= 100\ncommands consists only of \"UP\", \"RIGHT\", \"DOWN\", and \"LEFT\".\nThe input is generated such the snake will not move outside of the boundaries.", "difficulty": "easy", "starter_code": "class Solution:\n    def finalPositionOfSnake(self, n: int, commands: List[str]) -> int:\n        ", "public_test_cases": "[{\"input\": \"2\\n[\\\"RIGHT\\\", \\\"DOWN\\\"]\", \"output\": \"3\", \"testtype\": \"functional\"}, {\"input\": \"3\\n[\\\"DOWN\\\", \\\"RIGHT\\\", \\\"UP\\\"]\", \"output\": \"1\", \"testtype\": \"functional\"}]"}
{"question_id": "abc331_a", "question_title": "Tomorrow", "question_content": "In the calendar of AtCoder Kingdom, a year consists of M months from month 1 to month M, and each month consists of D days from day 1 to day D.\nWhat day follows year y, month m, day d in this calendar?\n\nInput\n\nThe input is given from Standard Input in the following format:\nM D\r\ny m d\n\nOutput\n\nIf the day following year y, month m, day d in the calendar of AtCoder Kingdom is year y', month m', day d', print y', m', and d' in this order, separated by spaces.\n\nConstraints\n\n\n- 1000 \\leq y \\leq 9000\n- 1 \\leq m \\leq M \\leq 99\n- 1 \\leq d \\leq D \\leq 99\n- All input values are integers.\n\nSample Input 1\n\n12 30\r\n2023 12 30\n\nSample Output 1\n\n2024 1 1\r\n\nIn the calendar of the kingdom, a year consists of 12 months, and each month consists of 30 days.\r\nThus, the day following year 2023, month 12, day 30 is year 2024, month 1, day 1.\n\nSample Input 2\n\n36 72\r\n6789 23 45\n\nSample Output 2\n\n6789 23 46\r\n\nIn the calendar of the kingdom, one year consists of 36 months, and each month consists of 72 days.\r\nThus, the day following year 6789, month 23, day 45 is year 6789, month 23, day 46.\n\nSample Input 3\n\n12 30\r\n2012 6 20\n\nSample Output 3\n\n2012 6 21", "difficulty": "easy", "starter_code": "", "public_test_cases": "[{\"input\": \"12 30\\n2023 12 30\\n\", \"output\": \"2024 1 1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"36 72\\n6789 23 45\\n\", \"output\": \"6789 23 46\\n\", \"testtype\": \"stdin\"}, {\"input\": \"12 30\\n2012 6 20\\n\", \"output\": \"2012 6 21\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc384_b", "question_title": "ARC Division", "question_content": "AtCoder Regular Contest (ARC) is divided into two divisions.\n\n- In ARC Div. 1, participants whose rating at the start of the contest is between 1600 and 2799, inclusive, are subject to rating updates.\n- In ARC Div. 2, participants whose rating at the start of the contest is between 1200 and 2399, inclusive, are subject to rating updates.\n\nTakahashi decided to participate in N ARCs.\nInitially, his rating is R.\nThe i-th (1\\leq i\\leq N) ARC is Div. D _ i, and his performance in that contest is represented by an integer A _ i.\nIf he is subject to a rating update in the i-th ARC, let T be his rating at the start of that contest. Then, after the contest, his rating becomes T+A _ i.\nIf his is not subject to a rating update, his rating does not change.\nRating updates for ARCs are performed immediately after the contest ends, and whether he is subject to rating updates in the next contest is determined based on his rating after the update.\nFind his rating after finishing the N ARCs.\nHe does not participate in any contests other than these N ARCs, and his rating does not change in other ways.\n\nInput\n\nThe input is given in the following format from Standard Input:\nN R\r\nD _ 1 A _ 1\r\nD _ 2 A _ 2\r\n\\vdots\r\nD _ N A _ N\n\nOutput\n\nPrint Takahashi's rating after finishing the N ARCs.\n\nConstraints\n\n\n- 1\\leq N\\leq 100\n- 0\\leq R\\leq 4229\n- 1\\leq D _ i\\leq 2\\ (1\\leq i\\leq N)\n- -1000\\leq A _ i\\leq 1000\\ (1\\leq i\\leq N)\n- All input values are integers.\n\nSample Input 1\n\n4 1255\r\n2 900\r\n1 521\r\n2 600\r\n1 52\n\nSample Output 1\n\n2728\r\n\nInitially, Takahashi's rating is 1255.\nFor each contest, Takahashi's rating changes as follows:\n\n- The 1st ARC is Div. 2. He is subject to rating updates, so his rating becomes 1255+900=2155.\n- The 2nd ARC is Div. 1. He is subject to rating updates, so his rating becomes 2155+521=2676.\n- The 3rd ARC is Div. 2. He is not subject to rating updates, so his rating does not change.\n- The 4th ARC is Div. 1. He is subject to rating updates, so his rating becomes 2676+52=2728.\n\nAfter the four ARCs, his rating is 2728, so print 2728.\n\nSample Input 2\n\n2 3031\r\n1 1000\r\n2 -1000\n\nSample Output 2\n\n3031\r\n\nHe is a Red coder, so his rating does not change upon his performance in ARC.\n\nSample Input 3\n\n15 2352\r\n2 -889\r\n2 420\r\n2 -275\r\n1 957\r\n1 -411\r\n1 -363\r\n1 151\r\n2 -193\r\n2 289\r\n2 -770\r\n2 109\r\n1 345\r\n2 551\r\n1 -702\r\n1 355\n\nSample Output 3\n\n1226", "difficulty": "easy", "starter_code": "", "public_test_cases": "[{\"input\": \"4 1255\\n2 900\\n1 521\\n2 600\\n1 52\", \"output\": \"2728\", \"testtype\": \"stdin\"}, {\"input\": \"2 3031\\n1 1000\\n2 -1000\", \"output\": \"3031\", \"testtype\": \"stdin\"}, {\"input\": \"15 2352\\n2 -889\\n2 420\\n2 -275\\n1 957\\n1 -411\\n1 -363\\n1 151\\n2 -193\\n2 289\\n2 -770\\n2 109\\n1 345\\n2 551\\n1 -702\\n1 355\", \"output\": \"1226\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc395_a", "question_title": "Strictly Increasing?", "question_content": "You are given a positive integer N and a sequence of positive integers A = (A_1,A_2,\\dots,A_N) of length N.\nDetermine whether A is strictly increasing, that is, whether A_i < A_{i+1} holds for every integer i with 1 \\leq i < N.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \\dots A_N\n\nOutput\n\nIf A is strictly increasing, print Yes; otherwise, print No.\nThe judge is case-insensitive. For example, if the correct answer is Yes, any of yes, YES, and yEs will be accepted.\n\nConstraints\n\n\n- 2 \\leq N \\leq 100\n- 1 \\leq A_i \\leq 1000 \\ (1 \\leq i \\leq N)\n- All input values are integers.\n\nSample Input 1\n\n3\n1 2 5\n\nSample Output 1\n\nYes\n\nA_1 < A_2 and A_2 < A_3, so A is strictly increasing.\n\nSample Input 2\n\n3\n3 9 5\n\nSample Output 2\n\nNo\n\nA_1 < A_2, but A_2 < A_3 does not hold, so A is not strictly increasing.\n\nSample Input 3\n\n10\n1 1 2 3 5 8 13 21 34 55\n\nSample Output 3\n\nNo\n\nA_1 < A_2 does not hold, so A is not strictly increasing.", "difficulty": "easy", "starter_code": "", "public_test_cases": "[{\"input\": \"3\\n1 2 5\", \"output\": \"Yes\", \"testtype\": \"stdin\"}, {\"input\": \"3\\n3 9 5\", \"output\": \"No\", \"testtype\": \"stdin\"}, {\"input\": \"10\\n1 1 2 3 5 8 13 21 34 55\", \"output\": \"No\", \"testtype\": \"stdin\"}]"}
