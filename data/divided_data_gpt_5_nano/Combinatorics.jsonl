{"question_id": "3104", "question_title": "happy-students", "question_content": "You are given a 0-indexed integer array nums of length n where n is the total number of students in the class. The class teacher tries to select a group of students so that all the students remain happy.\nThe i^th student will become happy if one of these two conditions is met:\n\nThe student is selected and the total number of selected students is strictly greater than nums[i].\nThe student is not selected and the total number of selected students is strictly less than nums[i].\n\nReturn the number of ways to select a group of students so that everyone remains happy.\n \nExample 1:\n\nInput: nums = [1,1]\nOutput: 2\nExplanation: \nThe two possible ways are:\nThe class teacher selects no student.\nThe class teacher selects both students to form the group. \nIf the class teacher selects just one student to form a group then the both students will not be happy. Therefore, there are only two possible ways.\n\nExample 2:\n\nInput: nums = [6,0,3,3,6,7,2,7]\nOutput: 3\nExplanation: \nThe three possible ways are:\nThe class teacher selects the student with index = 1 to form the group.\nThe class teacher selects the students with index = 1, 2, 3, 6 to form the group.\nThe class teacher selects all the students to form the group.\n\n \nConstraints:\n\n1 <= nums.length <= 10^5\n0 <= nums[i] < nums.length", "difficulty": "medium", "starter_code": "class Solution:\n    def countWays(self, nums: List[int]) -> int:\n        ", "public_test_cases": "[{\"input\": \"[1, 1]\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"[6, 0, 3, 3, 6, 7, 2, 7]\", \"output\": \"3\", \"testtype\": \"functional\"}]"}
{"question_id": "3224", "question_title": "count-the-number-of-infection-sequences", "question_content": "You are given an integer n and a 0-indexed integer array sick which is sorted in increasing order.\nThere are n children standing in a queue with positions 0 to n - 1 assigned to them. The array sick contains the positions of the children who are infected with an infectious disease. An infected child at position i can spread the disease to either of its immediate neighboring children at positions i - 1 and i + 1 if they exist and are currently not infected. At most one child who was previously not infected can get infected with the disease in one second.\nIt can be shown that after a finite number of seconds, all the children in the queue will get infected with the disease. An infection sequence is the sequential order of positions in which all of the non-infected children get infected with the disease. Return the total number of possible infection sequences.\nSince the answer may be large, return it modulo 10^9 + 7.\nNote that an infection sequence does not contain positions of children who were already infected with the disease in the beginning.\n \nExample 1:\n\nInput: n = 5, sick = [0,4]\nOutput: 4\nExplanation: Children at positions 1, 2, and 3 are not infected in the beginning. There are 4 possible infection sequences:\n- The children at positions 1 and 3 can get infected since their positions are adjacent to the infected children 0 and 4. The child at position 1 gets infected first.\nNow, the child at position 2 is adjacent to the child at position 1 who is infected and the child at position 3 is adjacent to the child at position 4 who is infected, hence either of them can get infected. The child at position 2 gets infected.\nFinally, the child at position 3 gets infected because it is adjacent to children at positions 2 and 4 who are infected. The infection sequence is [1,2,3].\n- The children at positions 1 and 3 can get infected because their positions are adjacent to the infected children 0 and 4. The child at position 1 gets infected first.\nNow, the child at position 2 is adjacent to the child at position 1 who is infected and the child at position 3 is adjacent to the child at position 4 who is infected, hence either of them can get infected. The child at position 3 gets infected.\nFinally, the child at position 2 gets infected because it is adjacent to children at positions 1 and 3 who are infected. The infection sequence is [1,3,2].\n- The infection sequence is [3,1,2]. The order of infection of disease in the children can be seen as: [0,1,2,3,4] => [0,1,2,3,4] => [0,1,2,3,4] => [0,1,2,3,4].\n- The infection sequence is [3,2,1]. The order of infection of disease in the children can be seen as: [0,1,2,3,4] => [0,1,2,3,4] => [0,1,2,3,4] => [0,1,2,3,4].\n\nExample 2:\n\nInput: n = 4, sick = [1]\nOutput: 3\nExplanation: Children at positions 0, 2, and 3 are not infected in the beginning. There are 3 possible infection sequences:\n- The infection sequence is [0,2,3]. The order of infection of disease in the children can be seen as: [0,1,2,3] => [0,1,2,3] => [0,1,2,3] => [0,1,2,3].\n- The infection sequence is [2,0,3]. The order of infection of disease in the children can be seen as: [0,1,2,3] => [0,1,2,3] => [0,1,2,3] => [0,1,2,3].\n- The infection sequence is [2,3,0]. The order of infection of disease in the children can be seen as: [0,1,2,3] => [0,1,2,3] => [0,1,2,3] => [0,1,2,3].\n\n \nConstraints:\n\n2 <= n <= 10^5\n1 <= sick.length <= n - 1\n0 <= sick[i] <= n - 1\nsick is sorted in increasing order.", "difficulty": "hard", "starter_code": "class Solution:\n    def numberOfSequence(self, n: int, sick: List[int]) -> int:\n        ", "public_test_cases": "[{\"input\": \"5\\n[0, 4]\", \"output\": \"4\", \"testtype\": \"functional\"}, {\"input\": \"4\\n[1]\", \"output\": \"3\", \"testtype\": \"functional\"}]"}
{"question_id": "abc303_b", "question_title": "Discord", "question_content": "N people numbered 1,2,\\ldots,N were in M photos.  In each of the photos, they stood in a single line.  In the i-th photo, the j-th person from the left is person a_{i,j}.  \nTwo people who did not stand next to each other in any of the photos may be in a bad mood.\nHow many pairs of people may be in a bad mood?  Here, we do not distinguish a pair of person x and person y, and a pair of person y and person x.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\na_{1,1} \\ldots a_{1,N}\r\n\\vdots\r\na_{M,1} \\ldots a_{M,N}\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 2 \\leq N \\leq 50\n- 1 \\leq M \\leq 50\n- 1 \\leq a_{i,j} \\leq N\n- a_{i,1},\\ldots,a_{i,N} contain each of 1,\\ldots,N exactly once.\n- All values in the input are integers.\n\nSample Input 1\n\n4 2\r\n1 2 3 4\r\n4 3 1 2\n\nSample Output 1\n\n2\r\n\nThe pair of person 1 and person 4, and the pair of person 2 and person 4, may be in a bad mood.\n\nSample Input 2\n\n3 3\r\n1 2 3\r\n3 1 2\r\n1 2 3\n\nSample Output 2\n\n0\n\nSample Input 3\n\n10 10\r\n4 10 7 2 8 3 9 1 6 5\r\n3 6 2 9 1 8 10 7 4 5\r\n9 3 4 5 7 10 1 8 2 6\r\n7 3 1 8 4 9 5 6 2 10\r\n5 2 1 4 10 7 9 8 3 6\r\n5 8 1 6 9 3 2 4 7 10\r\n8 10 3 4 5 7 2 9 6 1\r\n3 10 2 7 8 5 1 4 9 6\r\n10 6 1 5 4 2 3 8 9 7\r\n4 5 9 1 8 2 7 6 3 10\n\nSample Output 3\n\n6", "difficulty": "easy", "starter_code": "", "public_test_cases": "[{\"input\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3 3\\n1 2 3\\n3 1 2\\n1 2 3\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"10 10\\n4 10 7 2 8 3 9 1 6 5\\n3 6 2 9 1 8 10 7 4 5\\n9 3 4 5 7 10 1 8 2 6\\n7 3 1 8 4 9 5 6 2 10\\n5 2 1 4 10 7 9 8 3 6\\n5 8 1 6 9 3 2 4 7 10\\n8 10 3 4 5 7 2 9 6 1\\n3 10 2 7 8 5 1 4 9 6\\n10 6 1 5 4 2 3 8 9 7\\n4 5 9 1 8 2 7 6 3 10\\n\", \"output\": \"6\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc303_e", "question_title": "A Gift From the Stars", "question_content": "A graph with (k+1) vertices and k edges is called a level-k\\ (k\\geq 2) star if and only if:\n\n- it has a vertex that is connected to each of the other k vertices with an edge, and there are no other edges.\n\nAt first, Takahashi had a graph consisting of stars.  He repeated the following operation until every pair of vertices in the graph was connected:\n\n- choose two vertices in the graph.  Here, the vertices must be disconnected, and their degrees must be both 1.  Add an edge that connects the chosen two vertices.\n\nHe then arbitrarily assigned an integer from 1 through N to each of the vertices in the graph after the procedure.  The resulting graph is a tree; we call it T.  T has (N-1) edges, the i-th of which connects u_i and v_i.\nTakahashi has now forgotten the number and levels of the stars that he initially had.  Find them, given T.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nu_1 v_1\r\n\\vdots\r\nu_{N-1} v_{N-1}\n\nOutput\n\nSuppose that Takahashi initially had M stars, whose levels were L=(L_1,L_2,\\ldots,L_M).\r\nSort L in ascending order, and print them with spaces in between.\nWe can prove that the solution is unique in this problem.\n\nConstraints\n\n\n- 3\\leq N\\leq 2\\times 10^5\n- 1\\leq u_i, v_i\\leq N\n- The given graph is an N-vertex tree obtained by the procedure in the problem statement.\n- All values in the input are integers.\n\nSample Input 1\n\n6\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\n\nSample Output 1\n\n2 2\r\n\nTwo level-2 stars yield T, as the following figure shows:\n\nSample Input 2\n\n9\r\n3 9\r\n7 8\r\n8 6\r\n4 6\r\n4 1\r\n5 9\r\n7 3\r\n5 2\n\nSample Output 2\n\n2 2 2\n\nSample Input 3\n\n20\r\n8 3\r\n8 18\r\n2 19\r\n8 20\r\n9 17\r\n19 7\r\n8 7\r\n14 12\r\n2 15\r\n14 10\r\n2 13\r\n2 16\r\n2 1\r\n9 5\r\n10 15\r\n14 6\r\n2 4\r\n2 11\r\n5 12\n\nSample Output 3\n\n2 3 4 7", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"output\": \"2 2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"9\\n3 9\\n7 8\\n8 6\\n4 6\\n4 1\\n5 9\\n7 3\\n5 2\\n\", \"output\": \"2 2 2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"20\\n8 3\\n8 18\\n2 19\\n8 20\\n9 17\\n19 7\\n8 7\\n14 12\\n2 15\\n14 10\\n2 13\\n2 16\\n2 1\\n9 5\\n10 15\\n14 6\\n2 4\\n2 11\\n5 12\\n\", \"output\": \"2 3 4 7\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc307_e", "question_title": "Distinct Adjacent", "question_content": "There are N people numbered from 1 to N standing in a circle. Person 1 is to the right of person 2, person 2 is to the right of person 3, ..., and person N is to the right of person 1.\nWe will give each of the N people an integer between 0 and M-1, inclusive.\nAmong the M^N ways to distribute integers, find the number, modulo 998244353, of such ways that no two adjacent people have the same integer.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 2 \\leq N,M \\leq 10^6\n- N and M are integers.\n\nSample Input 1\n\n3 3\n\nSample Output 1\n\n6\n\nThere are six desired ways, where the integers given to persons 1,2,3 are (0,1,2),(0,2,1),(1,0,2),(1,2,0),(2,0,1),(2,1,0).\n\nSample Input 2\n\n4 2\n\nSample Output 2\n\n2\n\nThere are two desired ways, where the integers given to persons 1,2,3,4 are (0,1,0,1),(1,0,1,0).\n\nSample Input 3\n\n987654 456789\n\nSample Output 3\n\n778634319\n\nBe sure to find the number modulo 998244353.", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"3 3\\n\", \"output\": \"6\\n\", \"testtype\": \"stdin\"}, {\"input\": \"4 2\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"987654 456789\\n\", \"output\": \"778634319\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc310_d", "question_title": "Peaceful Teams", "question_content": "There are N sports players.\nAmong them, there are M incompatible pairs. The i-th incompatible pair (1\\leq i\\leq M) is the A_i-th and B_i-th players.\nYou will divide the players into T teams.\r\nEvery player must belong to exactly one team, and every team must have one or more players.\r\nAdditionally, for each i=1,2,\\ldots,M, the A_i-th and B_i-th players must not belong to the same team.\nFind the number of ways to satisfy these conditions.\r\nHere, two divisions are considered different when there are two players who belong to the same team in one division and different teams in the other.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN T M\r\nA _ 1 B _ 1\r\nA _ 2 B _ 2\r\n\\vdots\r\nA _ M B _ M\n\nOutput\n\nPrint the answer in a single line.\n\nConstraints\n\n\n- 1\\leq T\\leq N\\leq10\n- 0\\leq M\\leq\\dfrac{N(N-1)}2\n- 1\\leq A _ i\\lt B _ i\\leq N\\ (1\\leq i\\leq M)\n- (A _ i,B _ i)\\neq (A _ j,B _ j)\\ (1\\leq i\\lt j\\leq M)\n- All input values are integers.\n\nSample Input 1\n\n5 2 2\r\n1 3\r\n3 4\n\nSample Output 1\n\n4\r\n\nThe following four divisions satisfy the conditions.\n\nNo other division satisfies them, so print 4.\n\nSample Input 2\n\n5 1 2\r\n1 3\r\n3 4\n\nSample Output 2\n\n0\r\n\nThere may be no division that satisfies the conditions.\n\nSample Input 3\n\n6 4 0\n\nSample Output 3\n\n65\r\n\nThere may be no incompatible pair.\n\nSample Input 4\n\n10 6 8\r\n5 9\r\n1 4\r\n3 8\r\n1 6\r\n4 10\r\n5 7\r\n5 6\r\n3 7\n\nSample Output 4\n\n8001", "difficulty": "medium", "starter_code": "", "public_test_cases": "[{\"input\": \"5 2 2\\n1 3\\n3 4\\n\", \"output\": \"4\\n\", \"testtype\": \"stdin\"}, {\"input\": \"5 1 2\\n1 3\\n3 4\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6 4 0\\n\", \"output\": \"65\\n\", \"testtype\": \"stdin\"}, {\"input\": \"10 6 8\\n5 9\\n1 4\\n3 8\\n1 6\\n4 10\\n5 7\\n5 6\\n3 7\\n\", \"output\": \"8001\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc318_e", "question_title": "Sandwiches", "question_content": "You are given a sequence of positive integers of length N: A=(A_1,A_2,\\ldots,A_N). Find the number of triples of positive integers (i,j,k) that satisfy all of the following conditions:\n\n- 1\\leq i < j < k\\leq  N,\n- A_i = A_k,\n- A_i \\neq A_j.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN \r\nA_1 A_2 \\ldots A_N\n\nOutput\n\nPrint the answer as an integer.\n\nConstraints\n\n\n- 3\\leq N\\leq 3\\times 10^5\n- 1\\leq A_i \\leq N\n- All input values are integers.\n\nSample Input 1\n\n5\r\n1 2 1 3 2\n\nSample Output 1\n\n3\r\n\nThe following three triples of positive integers (i,j,k) satisfy the conditions:\n\n- (i,j,k)=(1,2,3)\n- (i,j,k)=(2,3,5)\n- (i,j,k)=(2,4,5)\n\nSample Input 2\n\n7\r\n1 2 3 4 5 6 7\n\nSample Output 2\n\n0\r\n\nThere may be no triples of positive integers (i,j,k) that satisfy the conditions.\n\nSample Input 3\n\n13\r\n9 7 11 7 3 8 1 13 11 11 11 6 13\n\nSample Output 3\n\n20", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"5\\n1 2 1 3 2\\n\", \"output\": \"3\\n\", \"testtype\": \"stdin\"}, {\"input\": \"7\\n1 2 3 4 5 6 7\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"13\\n9 7 11 7 3 8 1 13 11 11 11 6 13\\n\", \"output\": \"20\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc321_c", "question_title": "321", "question_content": "A positive integer x is called a 321-like Number when it satisfies the following condition. This definition is the same as the one in Problem A.\n\n- The digits of x are strictly decreasing from top to bottom.\n- In other words, if x has d digits, it satisfies the following for every integer i such that 1 \\le i < d:\n- (the i-th digit from the top of x) > (the (i+1)-th digit from the top of x).\n\n\n\nNote that all one-digit positive integers are 321-like Numbers.\nFor example, 321, 96410, and 1 are 321-like Numbers, but 123, 2109, and 86411 are not.\nFind the K-th smallest 321-like Number.\n\nInput\n\nThe input is given from Standard Input in the following format:\nK\n\nOutput\n\nPrint the K-th smallest 321-like Number as an integer.\n\nConstraints\n\n\n- All input values are integers.\n- 1 \\le K\n- At least K 321-like Numbers exist.\n\nSample Input 1\n\n15\n\nSample Output 1\n\n32\n\nThe 321-like Numbers are (1,2,3,4,5,6,7,8,9,10,20,21,30,31,32,40,\\dots) from smallest to largest.\nThe 15-th smallest of them is 32.\n\nSample Input 2\n\n321\n\nSample Output 2\n\n9610\n\nSample Input 3\n\n777\n\nSample Output 3\n\n983210", "difficulty": "medium", "starter_code": "", "public_test_cases": "[{\"input\": \"15\\n\", \"output\": \"32\\n\", \"testtype\": \"stdin\"}, {\"input\": \"321\\n\", \"output\": \"9610\\n\", \"testtype\": \"stdin\"}, {\"input\": \"777\\n\", \"output\": \"983210\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc329_b", "question_title": "Next", "question_content": "You are given N integers A_1, A_2, \\ldots, A_N. Find the largest among those integers that are not the largest.\nThe constraints of this problem guarantee that the answer exists.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nA_1 A_2 \\ldots A_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 2 \\leq N \\leq 100\n- 1 \\leq A_i \\leq 100\n- It is not the case that all A_1, A_2, \\ldots, A_N are equal.\n- All input values are integers.\n\nSample Input 1\n\n5\r\n2 1 3 3 2\n\nSample Output 1\n\n2\r\n\nThe largest integer among 2,1,3,3,2 is 3.\nThe integers that are not 3 among 2,1,3,3,2 are 2,1,2, among which the largest is 2.\n\nSample Input 2\n\n4\r\n4 3 2 1\n\nSample Output 2\n\n3\n\nSample Input 3\n\n8\r\n22 22 18 16 22 18 18 22\n\nSample Output 3\n\n18", "difficulty": "easy", "starter_code": "", "public_test_cases": "[{\"input\": \"5\\n2 1 3 3 2\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"4\\n4 3 2 1\\n\", \"output\": \"3\\n\", \"testtype\": \"stdin\"}, {\"input\": \"8\\n22 22 18 16 22 18 18 22\\n\", \"output\": \"18\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc329_c", "question_title": "Count xxx", "question_content": "You are given a string S of length N consisting of lowercase English letters.\nFind the number of non-empty substrings of S that are repetitions of one character. Here, two substrings that are equal as strings are not distinguished even if they are obtained differently.\nA non-empty substring of S is a string of length at least one obtained by deleting zero or more characters from the beginning and zero or more characters from the end of S. For example, ab and abc are non-empty substrings of abc, while ac and the empty string are not.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nS\n\nOutput\n\nPrint the number of non-empty substrings of S that are repetitions of one character.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2\\times 10^5\n- S is a string of length N consisting of lowercase English letters.\n\nSample Input 1\n\n6\r\naaabaa\n\nSample Output 1\n\n4\r\n\nThe non-empty substrings of S that are repetitions of one character are a, aa, aaa, and b; there are four of them. Note that there are multiple ways to obtain a or aa from S, but each should only be counted once.\n\nSample Input 2\n\n1\r\nx\n\nSample Output 2\n\n1\n\nSample Input 3\n\n12\r\nssskkyskkkky\n\nSample Output 3\n\n8", "difficulty": "medium", "starter_code": "", "public_test_cases": "[{\"input\": \"6\\naaabaa\\n\", \"output\": \"4\\n\", \"testtype\": \"stdin\"}, {\"input\": \"1\\nx\\n\", \"output\": \"1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"12\\nssskkyskkkky\\n\", \"output\": \"8\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc330_d", "question_title": "Counting Ls", "question_content": "You are given an N \\times N grid. Let (i,j) denote the cell in the i-th row from the top and the j-th column from the left.\r\nThe states of the cells are given by N strings of length N, S_1, S_2, \\dots, S_N, in the following format:\n\n- If the j-th character of S_i is o, there is an o written in cell (i,j).\n- If the j-th character of S_i is x, there is an x written in cell (i,j).\n\nFind the number of triples of cells that satisfy all of the following conditions:\n\n- The three cells in the triple are distinct.\n- All three cells have an o written in them.\n- Exactly two of the cells are in the same row.\n- Exactly two of the cells are in the same column.\n\nHere, two triples are considered different if and only if some cell is contained in exactly one of the triples.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nS_1\r\nS_2\r\n\\vdots\r\nS_N\n\nOutput\n\nPrint the answer as an integer.\n\nConstraints\n\n\n- N is an integer between 2 and 2000, inclusive.\n- S_i is a string of length N consisting of o and x.\n\nSample Input 1\n\n3\r\nooo\r\noxx\r\nxxo\n\nSample Output 1\n\n4\r\n\nThe following four triples satisfy the conditions:\n\n- (1,1),(1,2),(2,1)\n- (1,1),(1,3),(2,1)\n- (1,1),(1,3),(3,3)\n- (1,2),(1,3),(3,3)\n\nSample Input 2\n\n4\r\noxxx\r\nxoxx\r\nxxox\r\nxxxo\n\nSample Output 2\n\n0\n\nSample Input 3\n\n15\r\nxooxxooooxxxoox\r\noxxoxoxxxoxoxxo\r\noxxoxoxxxoxoxxx\r\nooooxooooxxoxxx\r\noxxoxoxxxoxoxxx\r\noxxoxoxxxoxoxxo\r\noxxoxooooxxxoox\r\nxxxxxxxxxxxxxxx\r\nxooxxxooxxxooox\r\noxxoxoxxoxoxxxo\r\nxxxoxxxxoxoxxoo\r\nxooxxxooxxoxoxo\r\nxxxoxxxxoxooxxo\r\noxxoxoxxoxoxxxo\r\nxooxxxooxxxooox\n\nSample Output 3\n\n2960", "difficulty": "medium", "starter_code": "", "public_test_cases": "[{\"input\": \"3\\nooo\\noxx\\nxxo\\n\", \"output\": \"4\\n\", \"testtype\": \"stdin\"}, {\"input\": \"4\\noxxx\\nxoxx\\nxxox\\nxxxo\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"15\\nxooxxooooxxxoox\\noxxoxoxxxoxoxxo\\noxxoxoxxxoxoxxx\\nooooxooooxxoxxx\\noxxoxoxxxoxoxxx\\noxxoxoxxxoxoxxo\\noxxoxooooxxxoox\\nxxxxxxxxxxxxxxx\\nxooxxxooxxxooox\\noxxoxoxxoxoxxxo\\nxxxoxxxxoxoxxoo\\nxooxxxooxxoxoxo\\nxxxoxxxxoxooxxo\\noxxoxoxxoxoxxxo\\nxooxxxooxxxooox\\n\", \"output\": \"2960\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc335_b", "question_title": "Tetrahedral Number", "question_content": "You are given an integer N.\nPrint all triples of non-negative integers (x,y,z) such that x+y+z\\leq N in ascending lexicographical order.\n What is lexicographical order for non-negative integer triples?\n\r\nA triple of non-negative integers (x,y,z) is said to be lexicographically smaller than (x',y',z') if and only if one of the following holds:\r\n\n\n- x < x';\n- x=x' and y< y';\n- x=x' and y=y' and z< z'.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\n\nOutput\n\nPrint all triples of non-negative integers (x,y,z) such that x+y+z\\leq N in ascending lexicographical order, with x,y,z separated by spaces, one triple per line.\n\nConstraints\n\n\n- 0 \\leq N \\leq 21\n- N is an integer.\n\nSample Input 1\n\n3\n\nSample Output 1\n\n0 0 0\r\n0 0 1\r\n0 0 2\r\n0 0 3\r\n0 1 0\r\n0 1 1\r\n0 1 2\r\n0 2 0\r\n0 2 1\r\n0 3 0\r\n1 0 0\r\n1 0 1\r\n1 0 2\r\n1 1 0\r\n1 1 1\r\n1 2 0\r\n2 0 0\r\n2 0 1\r\n2 1 0\r\n3 0 0\n\nSample Input 2\n\n4\n\nSample Output 2\n\n0 0 0\r\n0 0 1\r\n0 0 2\r\n0 0 3\r\n0 0 4\r\n0 1 0\r\n0 1 1\r\n0 1 2\r\n0 1 3\r\n0 2 0\r\n0 2 1\r\n0 2 2\r\n0 3 0\r\n0 3 1\r\n0 4 0\r\n1 0 0\r\n1 0 1\r\n1 0 2\r\n1 0 3\r\n1 1 0\r\n1 1 1\r\n1 1 2\r\n1 2 0\r\n1 2 1\r\n1 3 0\r\n2 0 0\r\n2 0 1\r\n2 0 2\r\n2 1 0\r\n2 1 1\r\n2 2 0\r\n3 0 0\r\n3 0 1\r\n3 1 0\r\n4 0 0", "difficulty": "easy", "starter_code": "", "public_test_cases": "[{\"input\": \"3\\n\", \"output\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"4\\n\", \"output\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 0 4\\n0 1 0\\n0 1 1\\n0 1 2\\n0 1 3\\n0 2 0\\n0 2 1\\n0 2 2\\n0 3 0\\n0 3 1\\n0 4 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 0 3\\n1 1 0\\n1 1 1\\n1 1 2\\n1 2 0\\n1 2 1\\n1 3 0\\n2 0 0\\n2 0 1\\n2 0 2\\n2 1 0\\n2 1 1\\n2 2 0\\n3 0 0\\n3 0 1\\n3 1 0\\n4 0 0\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc337_e", "question_title": "Bad Juice", "question_content": "This is an interactive problem (a type of problem where your program interacts with the judge program through Standard Input and Output).\nThere are N bottles of juice, numbered 1 to N. It has been discovered that exactly one of these bottles has gone bad. Even a small sip of the spoiled juice will cause stomach upset the next day.\nTakahashi must identify the spoiled juice by the next day. To do this, he decides to call the minimum necessary number of friends and serve them some of the N bottles of juice. He can give any number of bottles to each friend, and each bottle of juice can be given to any number of friends.\nPrint the number of friends to call and how to distribute the juice, then receive information on whether each friend has an upset stomach the next day, and print the spoiled bottle's number.\n\nInput/Output\n\nThis is an interactive problem (a type of problem where your program interacts with the judge program through Standard Input and Output).\nBefore the interaction, the judge secretly selects an integer X between 1 and N as the spoiled bottle's number. The value of X is not given to you. Also, the value of X may change during the interaction as long as it is consistent with the constraints and previous outputs.\nFirst, the judge will give you N as input.\nN\r\n\nYou should print the number of friends to call, M, followed by a newline.\nM\r\n\nNext, you should perform the following procedure to print M outputs.\r\nFor i = 1, 2, \\ldots, M, the i-th output should contain the number K_i of bottles of juice you will serve to the i-th friend, and the K_i bottles' numbers in ascending order, A_{i, 1}, A_{i, 2}, \\ldots, A_{i, K_i}, separated by spaces, followed by a newline.\nK_i A_{i, 1} A_{i, 2} \\ldots A_{i, K_i}\r\n\nThen, the judge will inform you whether each friend has a stomach upset the next day by giving you a string S of length M consisting of 0 and 1.\nS\r\n\nFor i = 1, 2, \\ldots, M, the i-th friend has a stomach upset if and only if the i-th character of S is 1.\nYou should respond by printing the number of the spoiled juice bottle X', followed by a newline.\nX'\r\n\nThen, terminate the program immediately.\nIf the M you printed is the minimum necessary number of friends to identify the spoiled juice out of the N bottles, and the X' you printed matches the spoiled bottle's number X, then your program is considered correct.\n\nInput/Output\n\nThis is an interactive problem (a type of problem where your program interacts with the judge program through Standard Input and Output).\nBefore the interaction, the judge secretly selects an integer X between 1 and N as the spoiled bottle's number. The value of X is not given to you. Also, the value of X may change during the interaction as long as it is consistent with the constraints and previous outputs.\nFirst, the judge will give you N as input.\nN\r\n\nYou should print the number of friends to call, M, followed by a newline.\nM\r\n\nNext, you should perform the following procedure to print M outputs.\r\nFor i = 1, 2, \\ldots, M, the i-th output should contain the number K_i of bottles of juice you will serve to the i-th friend, and the K_i bottles' numbers in ascending order, A_{i, 1}, A_{i, 2}, \\ldots, A_{i, K_i}, separated by spaces, followed by a newline.\nK_i A_{i, 1} A_{i, 2} \\ldots A_{i, K_i}\r\n\nThen, the judge will inform you whether each friend has a stomach upset the next day by giving you a string S of length M consisting of 0 and 1.\nS\r\n\nFor i = 1, 2, \\ldots, M, the i-th friend has a stomach upset if and only if the i-th character of S is 1.\nYou should respond by printing the number of the spoiled juice bottle X', followed by a newline.\nX'\r\n\nThen, terminate the program immediately.\nIf the M you printed is the minimum necessary number of friends to identify the spoiled juice out of the N bottles, and the X' you printed matches the spoiled bottle's number X, then your program is considered correct.\n\nConstraints\n\n\n- N is an integer.\n- 2 \\leq N \\leq 100\n\n", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"3 1\\n\", \"output\": \"2\\n1 2 \\n1 3 \\n2\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc340_a", "question_title": "Arithmetic Progression", "question_content": "Print an arithmetic sequence with first term A, last term B, and common difference D.\nYou are only given inputs for which such an arithmetic sequence exists.\n\nInput\n\nThe input is given from Standard Input in the following format:\nA B D\n\nOutput\n\nPrint the terms of the arithmetic sequence with first term A, last term B, and common difference D, in order, separated by spaces.\n\nConstraints\n\n\n- 1 \\leq A \\leq B \\leq 100\n- 1 \\leq D \\leq 100\n- There is an arithmetic sequence with first term A, last term B, and common difference D.\n- All input values are integers.\n\nSample Input 1\n\n3 9 2\n\nSample Output 1\n\n3 5 7 9\r\n\nThe arithmetic sequence with first term 3, last term 9, and common difference 2 is (3,5,7,9).\n\nSample Input 2\n\n10 10 1\n\nSample Output 2\n\n10\r\n\nThe arithmetic sequence with first term 10, last term 10, and common difference 1 is (10).", "difficulty": "easy", "starter_code": "", "public_test_cases": "[{\"input\": \"3 9 2\\n\", \"output\": \"3 5 7 9\\n\", \"testtype\": \"stdin\"}, {\"input\": \"10 10 1\\n\", \"output\": \"10\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc375_e", "question_title": "3 Team Division", "question_content": "There are N people divided into three teams.\nThe people are numbered 1, 2, \\ldots, N, and the teams are numbered 1, 2, 3. Currently, person i belongs to team A_i.\nEach person has a value called strength; person i has a strength of B_i. The strength of a team is defined as the sum of the strengths of its members.\nDetermine whether it is possible for zero or more people to switch teams so that all teams have equal strength. If it is possible, find the minimum number of people who need to switch teams to achieve this.\nYou cannot create new teams other than teams 1, 2, 3.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nA_1 B_1\r\nA_2 B_2\r\n\\vdots\r\nA_N B_N\n\nOutput\n\nIf it is possible to make all teams have equal strength, print the minimum number of people who need to switch teams. Otherwise, print -1.\n\nConstraints\n\n\n- 3 \\leq N \\leq 100\n- A_i \\in \\lbrace 1, 2, 3 \\rbrace\n- For each x \\in \\lbrace 1, 2, 3 \\rbrace, there exists some i with A_i = x.\n- 1 \\leq B_i\n- \\displaystyle\\sum_{i = 1}^{N} B_i \\leq 1500 \n- All input values are integers.\n\nSample Input 1\n\n6\r\n1 2\r\n2 5\r\n1 5\r\n3 3\r\n1 3\r\n3 6\n\nSample Output 1\n\n2\r\n\nIf person 1 switches to team 3 and person 4 switches to team 2, all teams will have a strength of 8.\n\nSample Input 2\n\n4\r\n1 1\r\n1 2\r\n2 3\r\n3 4\n\nSample Output 2\n\n-1\n\nSample Input 3\n\n3\r\n1 1\r\n2 1\r\n3 1\n\nSample Output 3\n\n0\n\nSample Input 4\n\n12\r\n2 5\r\n1 4\r\n3 3\r\n2 3\r\n3 9\r\n1 2\r\n2 2\r\n3 9\r\n2 6\r\n1 9\r\n1 1\r\n3 1\n\nSample Output 4\n\n3", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"6\\n1 2\\n2 5\\n1 5\\n3 3\\n1 3\\n3 6\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"4\\n1 1\\n1 2\\n2 3\\n3 4\\n\", \"output\": \"-1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3\\n1 1\\n2 1\\n3 1\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"12\\n2 5\\n1 4\\n3 3\\n2 3\\n3 9\\n1 2\\n2 2\\n3 9\\n2 6\\n1 9\\n1 1\\n3 1\\n\", \"output\": \"3\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc375_d", "question_title": "ABA", "question_content": "You are given a string S consisting of uppercase English letters.\nFind the number of integer triples (i, j, k) satisfying both of the following conditions:\n\n- 1 \\leq i < j < k \\leq |S|\n- The length-3 string formed by concatenating S_i, S_j, and S_k in this order is a palindrome.\n\nHere, |S| denotes the length of S, and S_x denotes the x-th character of S.\n\nInput\n\nThe input is given from Standard Input in the following format:\nS\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- S is a string of length between 1 and 2 \\times 10^5, inclusive, consisting of uppercase English letters.\n\nSample Input 1\n\nABCACC\n\nSample Output 1\n\n5\r\n\nThe triples satisfying the conditions are (i, j, k) = (1, 2, 4), (1, 3, 4), (3, 4, 5), (3, 4, 6), (3, 5, 6).\n\nSample Input 2\n\nOOOOOOOO\n\nSample Output 2\n\n56\n\nSample Input 3\n\nXYYXYYXYXXX\n\nSample Output 3\n\n75", "difficulty": "medium", "starter_code": "", "public_test_cases": "[{\"input\": \"ABCACC\\n\", \"output\": \"5\\n\", \"testtype\": \"stdin\"}, {\"input\": \"OOOOOOOO\\n\", \"output\": \"56\\n\", \"testtype\": \"stdin\"}, {\"input\": \"XYYXYYXYXXX\\n\", \"output\": \"75\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc376_e", "question_title": "Max × Sum", "question_content": "You are given sequences of length N: A = (A_1, A_2, \\dots, A_N) and B = (B_1, B_2, \\dots, B_N).\nLet S be a subset of \\lbrace1, 2, \\dots, N\\rbrace of size K.\nHere, find the minimum possible value of the following expression:\n\n\\displaystyle \\left(\\max_{i \\in S} A_i\\right) \\times \\left(\\sum_{i \\in S} B_i\\right).\n\nYou are given T test cases; solve each of them.\n\nInput\n\nThe input is given from Standard Input in the following format. Here, \\mathrm{case}_i denotes the i-th test case.\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots\n\\mathrm{case}_T\n\nEach test case is given in the following format:\nN K\nA_1 A_2 \\dots A_N\nB_1 B_2 \\dots B_N\n\nOutput\n\nPrint T lines. The i-th line should contain the answer for the i-th test case.\n\nConstraints\n\n\n- 1 \\leq T \\leq 2 \\times 10^5\n- 1 \\leq K \\leq N \\leq 2 \\times 10^5\n- 1 \\leq A_i, B_i \\leq 10^6\n- The sum of N over all test cases is at most 2 \\times 10^5.\n- All input values are integers.\n\nSample Input 1\n\n3\n3 2\n3 7 6\n9 2 4\n5 3\n6 4 1 5 9\n8 6 5 1 7\n10 6\n61 95 61 57 69 49 46 47 14 43\n39 79 48 92 90 76 30 16 30 94\n\nSample Output 1\n\n42\n60\n14579\n\nIn the first test case, for S = \\{2, 3\\}, the value of the expression is 7 \\times (2 + 4) = 42, which is the minimum.", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"3\\n3 2\\n3 7 6\\n9 2 4\\n5 3\\n6 4 1 5 9\\n8 6 5 1 7\\n10 6\\n61 95 61 57 69 49 46 47 14 43\\n39 79 48 92 90 76 30 16 30 94\\n\", \"output\": \"42\\n60\\n14579\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc377_f", "question_title": "Avoid Queen Attack", "question_content": "There is a grid of N^2 squares with N rows and N columns.\r\nLet (i,j) denote the square at the i-th row from the top (1\\leq i\\leq N) and j-th column from the left (1\\leq j\\leq N).\nEach square is either empty or has a piece placed on it.\r\nThere are M pieces placed on the grid, and the k-th (1\\leq k\\leq M) piece is placed on square (a_k,b_k).\nYou want to place your piece on an empty square in such a way that it cannot be captured by any of the existing pieces.\nA piece placed on square (i,j) can capture pieces that satisfy any of the following conditions:\n\n- Placed in row i\n- Placed in column j\n- Placed on any square (a,b)\\ (1\\leq a\\leq N,1\\leq b\\leq N) where i+j=a+b\n- Placed on any square (a,b)\\ (1\\leq a\\leq N,1\\leq b\\leq N) where i-j=a-b\n\nFor example, a piece placed on square (4,4) can capture pieces placed on the squares shown in blue in the following figure:\n\nHow many squares can you place your piece on?\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\na_1 b_1\r\na_2 b_2\r\n\\vdots\r\na_M b_M\n\nOutput\n\nPrint the number of empty squares where you can place your piece without it being captured by any existing pieces.\n\nConstraints\n\n\n- 1\\leq N\\leq10^9\n- 1\\leq M\\leq10^3\n- 1\\leq a_k\\leq N,1\\leq b_k\\leq N\\ (1\\leq k\\leq M)\n- (a_k,b_k)\\neq(a_l,b_l)\\ (1\\leq k\\lt l\\leq M)\n- All input values are integers.\n\nSample Input 1\n\n8 6\r\n1 4\r\n2 1\r\n3 8\r\n4 5\r\n5 2\r\n8 3\n\nSample Output 1\n\n2\r\n\nThe existing pieces can capture pieces placed on the squares shown in blue in the following figure:\n\nTherefore, you can place your piece on only two squares: squares (6,6) and (7,7).\n\nSample Input 2\n\n1000000000 1\r\n1 1\n\nSample Output 2\n\n999999997000000002\r\n\nOut of 10^{18} squares, the squares that cannot be used are: squares in row 1, squares in column 1, and squares (1,1), (2,2), \\ldots, (10^9,10^9), totaling 3\\times10^9-2 squares.\nNote that the answer may be 2^{32} or greater.\n\nSample Input 3\n\n20 10\r\n1 4\r\n7 11\r\n7 15\r\n8 10\r\n11 6\r\n12 5\r\n13 1\r\n15 2\r\n20 10\r\n20 15\n\nSample Output 3\n\n77", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"8 6\\n1 4\\n2 1\\n3 8\\n4 5\\n5 2\\n8 3\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"1000000000 1\\n1 1\\n\", \"output\": \"999999997000000002\\n\", \"testtype\": \"stdin\"}, {\"input\": \"20 10\\n1 4\\n7 11\\n7 15\\n8 10\\n11 6\\n12 5\\n13 1\\n15 2\\n20 10\\n20 15\\n\", \"output\": \"77\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc377_d", "question_title": "Many Segments 2", "question_content": "You are given two sequences of positive integers of length N, L=(L_1,L_2,\\ldots,L_N) and R=(R_1,R_2,\\ldots,R_N), and an integer M.\nFind the number of pairs of integers (l,r) that satisfy both of the following conditions:\n\n- 1\\le l \\le r \\le M\n- For every 1\\le i\\le N, the interval [l,r] does not completely contain the interval [L_i,R_i].\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nL_1 R_1\r\nL_2 R_2\r\n\\vdots\r\nL_N R_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1\\le N,M\\le 2\\times 10^5\n- 1\\le L_i\\le R_i\\le M\n- All input values are integers.\n\nSample Input 1\n\n2 4\r\n1 2\r\n3 4\n\nSample Output 1\n\n5\r\n\nThe five pairs (l,r)=(1,1),(2,2),(2,3),(3,3),(4,4) satisfy the conditions.\nFor example, (l,r)=(1,3) does not satisfy the conditions because the interval [1,3] completely contains the interval [1,2].\n\nSample Input 2\n\n6 5\r\n1 1\r\n2 2\r\n3 3\r\n4 4\r\n5 5\r\n1 5\n\nSample Output 2\n\n0\r\n\nThere may be cases where no pairs of integers satisfy the conditions.\n\nSample Input 3\n\n6 20\r\n8 12\r\n14 20\r\n11 13\r\n5 19\r\n4 11\r\n1 6\n\nSample Output 3\n\n102", "difficulty": "medium", "starter_code": "", "public_test_cases": "[{\"input\": \"2 4\\n1 2\\n3 4\\n\", \"output\": \"5\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n1 5\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6 20\\n8 12\\n14 20\\n11 13\\n5 19\\n4 11\\n1 6\\n\", \"output\": \"102\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc378_g", "question_title": "Everlasting LIDS", "question_content": "You are given integers A, B, and M.\nHow many permutations P = (P_1, \\dots, P_{AB-1}) of (1, 2, \\ldots, AB - 1) satisfy all of the following conditions? Find the count modulo M.\n\n- The length of a longest increasing subsequence of P is A.\n- The length of a longest decreasing subsequence of P is B.\n- There exists an integer n such that appending n + 0.5 to the end of P does not change either of the lengths of a longest increasing subsequence and a longest decreasing subsequence.\n\nInput\n\nThe input is given from Standard Input in the following format:\nA B M\n\nOutput\n\nPrint the number of permutations satisfying the conditions, modulo M.\n\nConstraints\n\n\n- All input values are integers.\n- 2 \\leq A, B\n- AB \\leq 120\n- 10^8 \\leq M \\leq 10^9\n- M is a prime.\n\nSample Input 1\n\n3 2 998244353\n\nSample Output 1\n\n10\n\nFor example, P = (2, 4, 5, 1, 3) satisfies the conditions. This can be confirmed as follows:\n\n- The length of a longest increasing subsequence of P is 3.\n- The length of a longest decreasing subsequence of P is 2.\n- For n = 4, the lengths of longest increasing and decreasing subsequences of (2, 4, 5, 1, 3, 4.5) are 3 and 2, respectively.\n\nThere are 10 permutations of (1, 2, 3, 4, 5) that satisfy the conditions.\n\nSample Input 2\n\n10 12 924844033\n\nSample Output 2\n\n623378361\n\nPrint the count modulo M.", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"3 2 998244353\", \"output\": \"10\", \"testtype\": \"stdin\"}, {\"input\": \"10 12 924844033\", \"output\": \"623378361\", \"testtype\": \"stdin\"}]"}
{"question_id": "arc184_c", "question_title": "Mountain and Valley Folds", "question_content": "We have a long, thin piece of paper whose thickness can be ignored. We perform the following operation 100 times: lift the right end, fold it so that it aligns with the left end using the center as a crease. After completing the 100 folds, we unfold the paper back to its original state. At this point, there are 2^{100} - 1 creases on the paper, and these creases can be classified into two types: mountain folds and valley folds. The figure below represents the state after performing the operation twice, where red solid lines represent mountain folds and red dashed lines represent valley folds.\n\nAbout mountain and valley folds\n\n- A crease is a mountain fold if it is folded so that the back sides of the paper come together at the crease.\n- A crease is a valley fold if it is folded so that the front sides of the paper come together at the crease.\n\n\n\nYou are given a sequence A = (A_1, A_2, \\dots, A_N) of N non-negative integers. Here, 0 = A_1 < A_2 < \\dots < A_N \\leq 10^{18}.\nFor each integer i from 1 through 2^{100} - A_N - 1, define f(i) as follows:\n\n- The number of k = 1, 2, \\dots, N such that the (i + A_k)-th crease from the left is a mountain fold.\n\nFind the maximum value among f(1), f(2), \\dots, f(2^{100} - A_N - 1).\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nA_1 A_2 \\cdots A_N\n\nOutput\n\nPrint the answer in one line.\n\nConstraints\n\n\n- 1 \\leq N \\leq 10^3\n- 0 = A_1 < A_2 < \\dots < A_N \\leq 10^{18}\n\nSample Input 1\n\n4\n0 1 2 3\n\nSample Output 1\n\n3\n\nIf mountain and valley folds are represented by M and V, respectively, there is a contiguous subsequence of creases like MMVM. There is no contiguous subsequence like MMMM, so the answer is 3.\n\nSample Input 2\n\n6\n0 2 3 5 7 8\n\nSample Output 2\n\n4", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"4\\n0 1 2 3\", \"output\": \"3\", \"testtype\": \"stdin\"}, {\"input\": \"6\\n0 2 3 5 7 8\", \"output\": \"4\", \"testtype\": \"stdin\"}]"}
{"question_id": "arc188_b", "question_title": "Symmetric Painting", "question_content": "On a circle, there are N equally spaced points numbered 0,1,\\ldots,N-1 in this order, with Alice at point 0 and Bob at point K. Initially, all points are colored white. Starting with Alice, they alternately perform the following operation:\n\n- Choose one of the currently white points and color it black. Here, after the operation, the coloring of the points must be symmetric with respect to the straight line connecting the operator and the center of the circle.\n\nIf the operator cannot perform an operation satisfying the above condition, the sequence of operations ends there.\nBoth players cooperate and make the best choices to maximize the total number of points colored black in the end. Determine whether all points are colored black at the end of the sequence of operations.\nYou are given T test cases to solve.\n\nInput\n\nThe input is given from Standard Input in the following format:\nT\n\\mathrm{case}_1\n\\mathrm{case}_2\n\\vdots \n\\mathrm{case}_T\n\nEach test case \\mathrm{case}_i (1 \\leq i \\leq T) is in the following format:\nN K\n\nOutput\n\nPrint T lines. The i-th line should contain Yes if all points can be colored black for the i-th test case, and No otherwise.\n\nConstraints\n\n\n- 1 \\leq T \\leq 10^5\n- 2 \\leq N \\leq 2 \\times 10^5\n- 1 \\leq K \\leq N-1\n- All input values are integers.\n\nSample Input 1\n\n4\n6 2\n6 3\n6 1\n200000 100000\n\nSample Output 1\n\nYes\nNo\nYes\nNo\n\nFor N=6 and K=2, all points can be colored black by, for example, performing operations in the following order:\n\n- Alice colors point 3 black.\n- Bob colors point 1 black.\n- Alice colors point 5 black.\n- Bob colors point 2 black.\n- Alice colors point 4 black.\n- Bob colors point 0 black.\n\n\nFor N=6 and K=3, below is one possible progression. Actually, no matter what they do, they cannot color all points black.\n\n- Alice colors point 3 black.\n- Bob colors point 0 black.\n- Alice cannot color any point black so that the coloring will be symmetric with respect to her line, so she cannot perform the operation.", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"4\\n6 2\\n6 3\\n6 1\\n200000 100000\", \"output\": \"Yes\\nNo\\nYes\\nNo\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc346_b", "question_title": "Piano", "question_content": "There is an infinitely long piano keyboard.\nIs there a continuous segment within this keyboard that consists of W white keys and B black keys?\n\nLet S be the string formed by infinitely repeating the string wbwbwwbwbwbw.\nIs there a substring of S that consists of W occurrences of w and B occurrences of b?\n\nWhat is a substring of S?\nA substring of S is a string that can be formed by concatenating the l-th, (l+1)-th, \\dots, r-th characters of S in this order for some two positive integers l and r (l\\leq r).\n\nInput\n\nThe input is given from Standard Input in the following format:\nW B\n\nOutput\n\nIf there is a substring of S that consists of W occurrences of w and B occurrences of b, print Yes; otherwise, print No.\n\nConstraints\n\n\n- W and B are integers.\n- 0\\leq W,B \\leq 100\n- W+B \\geq 1\n\nSample Input 1\n\n3 2\n\nSample Output 1\n\nYes\n\nThe first 15 characters of S are wbwbwwbwbwbwwbw. You can take the 11-th through 15-th characters to form the string bwwbw, which is a substring consisting of three occurrences of w and two occurrences of b.\n\nSample Input 2\n\n3 0\n\nSample Output 2\n\nNo\n\nThe only string consisting of three occurrences of w and zero occurrences of b is www, which is not a substring of S.\n\nSample Input 3\n\n92 66\n\nSample Output 3\n\nYes", "difficulty": "easy", "starter_code": "", "public_test_cases": "[{\"input\": \"3 2\\n\", \"output\": \"Yes\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3 0\\n\", \"output\": \"No\\n\", \"testtype\": \"stdin\"}, {\"input\": \"92 66\\n\", \"output\": \"Yes\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "3337", "question_title": "count-substrings-starting-and-ending-with-given-character", "question_content": "You are given a string s and a character c. Return the total number of substrings of s that start and end with c.\n \nExample 1:\n\nInput: s = \"abada\", c = \"a\"\nOutput: 6\nExplanation: Substrings starting and ending with \"a\" are: \"abada\", \"abada\", \"abada\", \"abada\", \"abada\", \"abada\".\n\nExample 2:\n\nInput: s = \"zzz\", c = \"z\"\nOutput: 6\nExplanation: There are a total of 6 substrings in s and all start and end with \"z\".\n\n \nConstraints:\n\n1 <= s.length <= 10^5\ns and c consist only of lowercase English letters.", "difficulty": "medium", "starter_code": "class Solution:\n    def countSubstrings(self, s: str, c: str) -> int:\n        ", "public_test_cases": "[{\"input\": \"\\\"abada\\\"\\n\\\"a\\\"\", \"output\": \"6\", \"testtype\": \"functional\"}, {\"input\": \"\\\"zzz\\\"\\n\\\"z\\\"\", \"output\": \"6\", \"testtype\": \"functional\"}]"}
{"question_id": "3316", "question_title": "find-the-sum-of-subsequence-powers", "question_content": "You are given an integer array nums of length n, and a positive integer k.\nThe power of a subsequence is defined as the minimum absolute difference between any two elements in the subsequence.\nReturn the sum of powers of all subsequences of nums which have length equal to k.\nSince the answer may be large, return it modulo 10^9 + 7.\n \nExample 1:\n\nInput: nums = [1,2,3,4], k = 3\nOutput: 4\nExplanation:\nThere are 4 subsequences in nums which have length 3: [1,2,3], [1,3,4], [1,2,4], and [2,3,4]. The sum of powers is |2 - 3| + |3 - 4| + |2 - 1| + |3 - 4| = 4.\n\nExample 2:\n\nInput: nums = [2,2], k = 2\nOutput: 0\nExplanation:\nThe only subsequence in nums which has length 2 is [2,2]. The sum of powers is |2 - 2| = 0.\n\nExample 3:\n\nInput: nums = [4,3,-1], k = 2\nOutput: 10\nExplanation:\nThere are 3 subsequences in nums which have length 2: [4,3], [4,-1], and [3,-1]. The sum of powers is |4 - 3| + |4 - (-1)| + |3 - (-1)| = 10.\n\n \nConstraints:\n\n2 <= n == nums.length <= 50\n-10^8 <= nums[i] <= 10^8 \n2 <= k <= n", "difficulty": "hard", "starter_code": "class Solution:\n    def sumOfPowers(self, nums: List[int], k: int) -> int:\n        ", "public_test_cases": "[{\"input\": \"[1, 2, 3, 4]\\n3\", \"output\": \"4\", \"testtype\": \"functional\"}, {\"input\": \"[2, 2]\\n2\", \"output\": \"0\", \"testtype\": \"functional\"}, {\"input\": \"[4, 3, -1]\\n2\", \"output\": \"10\", \"testtype\": \"functional\"}]"}
{"question_id": "abc366_e", "question_title": "Manhattan Multifocal Ellipse", "question_content": "You are given N points (x_1, y_1), (x_2, y_2), \\dots, (x_N, y_N) on a two-dimensional plane, and a non-negative integer D.\nFind the number of integer pairs (x, y) such that \\displaystyle \\sum_{i=1}^N (|x-x_i|+|y-y_i|) \\leq D.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN D\r\nx_1 y_1\r\nx_2 y_2\r\n\\vdots\r\nx_N y_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2 \\times 10^5\n- 0 \\leq D \\leq 10^6\n- -10^6 \\leq x_i, y_i \\leq 10^6\n- (x_i, y_i) \\neq (x_j, y_j) for i \\neq j.\n- All input values are integers.\n\nSample Input 1\n\n2 3\r\n0 0\r\n1 0\n\nSample Output 1\n\n8\r\n\nThe following figure visualizes the input and the answer for Sample 1. The blue points represent the input. The blue and red points, eight in total, satisfy the condition in the statement.\n\nSample Input 2\n\n2 0\r\n0 0\r\n2 0\n\nSample Output 2\n\n0\n\nSample Input 3\n\n6 100\r\n9 -6\r\n10 -1\r\n2 10\r\n-1 7\r\n-7 5\r\n-1 -4\n\nSample Output 3\n\n419", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"2 3\\n0 0\\n1 0\\n\", \"output\": \"8\\n\", \"testtype\": \"stdin\"}, {\"input\": \"2 0\\n0 0\\n2 0\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6 100\\n9 -6\\n10 -1\\n2 10\\n-1 7\\n-7 5\\n-1 -4\\n\", \"output\": \"419\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "arc183_c", "question_title": "Not Argmax", "question_content": "Find the number, modulo 998244353, of permutations P=(P_1,P_2,\\cdots,P_N) of (1,2,\\cdots,N) that satisfy all of the following M conditions.\n\n- The i-th condition: The maximum among P_{L_i},P_{L_i+1},\\cdots,P_{R_i} is not P_{X_i}.\nHere, L_i, R_i, and X_i are integers given in the input.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\nL_1 R_1 X_1\nL_2 R_2 X_2\n\\vdots\nL_M R_M X_M\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 500\n- 1 \\leq M \\leq 10^5\n- 1 \\leq L_i \\leq X_i \\leq R_i \\leq N\n- All input values are integers.\n\nSample Input 1\n\n3 2\n1 3 2\n1 2 1\n\nSample Output 1\n\n1\n\nOnly one permutation, P=(1,2,3), satisfies the conditions.\n\nSample Input 2\n\n5 1\n1 1 1\n\nSample Output 2\n\n0\n\nSample Input 3\n\n10 5\n3 8 4\n3 10 4\n1 7 2\n1 8 3\n3 8 7\n\nSample Output 3\n\n1598400\n\nSample Input 4\n\n15 17\n2 11 9\n2 15 13\n1 14 2\n5 11 5\n3 15 11\n1 6 2\n4 15 12\n3 11 6\n9 13 10\n2 14 6\n10 15 11\n1 8 6\n6 14 8\n2 10 2\n6 12 6\n3 14 12\n2 6 2\n\nSample Output 4\n\n921467228", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"3 2\\n1 3 2\\n1 2 1\\n\", \"output\": \"1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"5 1\\n1 1 1\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"10 5\\n3 8 4\\n3 10 4\\n1 7 2\\n1 8 3\\n3 8 7\\n\", \"output\": \"1598400\\n\", \"testtype\": \"stdin\"}, {\"input\": \"15 17\\n2 11 9\\n2 15 13\\n1 14 2\\n5 11 5\\n3 15 11\\n1 6 2\\n4 15 12\\n3 11 6\\n9 13 10\\n2 14 6\\n10 15 11\\n1 8 6\\n6 14 8\\n2 10 2\\n6 12 6\\n3 14 12\\n2 6 2\\n\", \"output\": \"921467228\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "arc183_a", "question_title": "Median of Good Sequences", "question_content": "You are given positive integers N and K.\nAn integer sequence of length NK where each integer from 1 to N appears exactly K times is called a good integer sequence.\nLet S be the number of good integer sequences.\r\nFind the \\operatorname{floor}((S+1)/2)-th good integer sequence in lexicographical order.\r\nHere, \\operatorname{floor}(x) represents the largest integer not exceeding x.\n What is lexicographical order for sequences?\nA sequence S = (S_1,S_2,\\ldots,S_{|S|}) is lexicographically smaller than a sequence T = (T_1,T_2,\\ldots,T_{|T|}) if either 1. or 2. below holds.\r\nHere, |S| and |T| represent the lengths of S and T, respectively.\n\n-  |S| \\lt |T| and (S_1,S_2,\\ldots,S_{|S|}) = (T_1,T_2,\\ldots,T_{|S|}). \n-  There exists an integer 1 \\leq i \\leq \\min\\lbrace |S|, |T| \\rbrace such that both of the following hold:\r\n\n-  (S_1,S_2,\\ldots,S_{i-1}) = (T_1,T_2,\\ldots,T_{i-1})\n-  S_i is (numerically) smaller than T_i.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN K\n\nOutput\n\nPrint the desired integer sequence, with elements separated by spaces.\n\nConstraints\n\n\n- 1 \\leq N \\leq 500\n- 1 \\leq K \\leq 500\n- All input values are integers.\n\nSample Input 1\n\n2 2\n\nSample Output 1\n\n1 2 2 1\r\n\nThere are six good integer sequences:\n\n- (1,1,2,2)\n- (1,2,1,2)\n- (1,2,2,1)\n- (2,1,1,2)\n- (2,1,2,1)\n- (2,2,1,1)\n\nTherefore, the answer is the 3rd sequence in lexicographical order, (1,2,2,1).\n\nSample Input 2\n\n1 5\n\nSample Output 2\n\n1 1 1 1 1\n\nSample Input 3\n\n6 1\n\nSample Output 3\n\n3 6 5 4 2 1\n\nSample Input 4\n\n3 3\n\nSample Output 4\n\n2 2 2 1 3 3 3 1 1", "difficulty": "medium", "starter_code": "", "public_test_cases": "[{\"input\": \"2 2\\n\", \"output\": \"1 2 2 1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"1 5\\n\", \"output\": \"1 1 1 1 1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6 1\\n\", \"output\": \"3 6 5 4 2 1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3 3\\n\", \"output\": \"2 2 2 1 3 3 3 1 1\\n\", \"testtype\": \"stdin\"}]"}
{"question_id": "3522", "question_title": "find-the-power-of-k-size-subarrays-i", "question_content": "You are given an array of integers nums of length n and a positive integer k.\nThe power of an array is defined as:\n\nIts maximum element if all of its elements are consecutive and sorted in ascending order.\n-1 otherwise.\n\nYou need to find the power of all subarrays of nums of size k.\nReturn an integer array results of size n - k + 1, where results[i] is the power of nums[i..(i + k - 1)].\n \nExample 1:\n\nInput: nums = [1,2,3,4,3,2,5], k = 3\nOutput: [3,4,-1,-1,-1]\nExplanation:\nThere are 5 subarrays of nums of size 3:\n\n[1, 2, 3] with the maximum element 3.\n[2, 3, 4] with the maximum element 4.\n[3, 4, 3] whose elements are not consecutive.\n[4, 3, 2] whose elements are not sorted.\n[3, 2, 5] whose elements are not consecutive.\n\n\nExample 2:\n\nInput: nums = [2,2,2,2,2], k = 4\nOutput: [-1,-1]\n\nExample 3:\n\nInput: nums = [3,2,3,2,3,2], k = 2\nOutput: [-1,3,-1,3,-1]\n\n \nConstraints:\n\n1 <= n == nums.length <= 500\n1 <= nums[i] <= 10^5\n1 <= k <= n", "difficulty": "medium", "starter_code": "class Solution:\n    def resultsArray(self, nums: List[int], k: int) -> List[int]:\n        ", "public_test_cases": "[{\"input\": \"[1, 2, 3, 4, 3, 2, 5]\\n3\", \"output\": \"[3, 4, -1, -1, -1]\", \"testtype\": \"functional\"}, {\"input\": \"[2, 2, 2, 2, 2]\\n4\", \"output\": \"[-1, -1]\", \"testtype\": \"functional\"}, {\"input\": \"[3, 2, 3, 2, 3, 2]\\n2\", \"output\": \"[-1, 3, -1, 3, -1]\", \"testtype\": \"functional\"}]"}
{"question_id": "3550", "question_title": "maximum-value-sum-by-placing-three-rooks-i", "question_content": "You are given a m x n 2D array board representing a chessboard, where board[i][j] represents the value of the cell (i, j).\nRooks in the same row or column attack each other. You need to place three rooks on the chessboard such that the rooks do not attack each other.\nReturn the maximum sum of the cell values on which the rooks are placed.\n \nExample 1:\n\nInput: board = [[-3,1,1,1],[-3,1,-3,1],[-3,2,1,1]]\nOutput: 4\nExplanation:\n\nWe can place the rooks in the cells (0, 2), (1, 3), and (2, 1) for a sum of 1 + 1 + 2 = 4.\n\nExample 2:\n\nInput: board = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: 15\nExplanation:\nWe can place the rooks in the cells (0, 0), (1, 1), and (2, 2) for a sum of 1 + 5 + 9 = 15.\n\nExample 3:\n\nInput: board = [[1,1,1],[1,1,1],[1,1,1]]\nOutput: 3\nExplanation:\nWe can place the rooks in the cells (0, 2), (1, 1), and (2, 0) for a sum of 1 + 1 + 1 = 3.\n\n \nConstraints:\n\n3 <= m == board.length <= 100\n3 <= n == board[i].length <= 100\n-10^9 <= board[i][j] <= 10^9", "difficulty": "hard", "starter_code": "class Solution:\n    def maximumValueSum(self, board: List[List[int]]) -> int:\n        ", "public_test_cases": "[{\"input\": \"[[-3, 1, 1, 1], [-3, 1, -3, 1], [-3, 2, 1, 1]]\", \"output\": \"4\", \"testtype\": \"functional\"}, {\"input\": \"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]\", \"output\": \"15\", \"testtype\": \"functional\"}, {\"input\": \"[[1, 1, 1], [1, 1, 1], [1, 1, 1]]\", \"output\": \"3\", \"testtype\": \"functional\"}]"}
{"question_id": "3548", "question_title": "find-the-count-of-good-integers", "question_content": "You are given two positive integers n and k.\nAn integer x is called k-palindromic if:\n\nx is a palindrome.\nx is divisible by k.\n\nAn integer is called good if its digits can be rearranged to form a k-palindromic integer. For example, for k = 2, 2020 can be rearranged to form the k-palindromic integer 2002, whereas 1010 cannot be rearranged to form a k-palindromic integer.\nReturn the count of good integers containing n digits.\nNote that any integer must not have leading zeros, neither before nor after rearrangement. For example, 1010 cannot be rearranged to form 101.\n \nExample 1:\n\nInput: n = 3, k = 5\nOutput: 27\nExplanation:\nSome of the good integers are:\n\n551 because it can be rearranged to form 515.\n525 because it is already k-palindromic.\n\n\nExample 2:\n\nInput: n = 1, k = 4\nOutput: 2\nExplanation:\nThe two good integers are 4 and 8.\n\nExample 3:\n\nInput: n = 5, k = 6\nOutput: 2468\n\n \nConstraints:\n\n1 <= n <= 10\n1 <= k <= 9", "difficulty": "hard", "starter_code": "class Solution:\n    def countGoodIntegers(self, n: int, k: int) -> int:\n        ", "public_test_cases": "[{\"input\": \"3\\n5\", \"output\": \"27\", \"testtype\": \"functional\"}, {\"input\": \"1\\n4\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"5\\n6\", \"output\": \"2468\", \"testtype\": \"functional\"}]"}
{"question_id": "abc392_a", "question_title": "Shuffled Equation", "question_content": "You are given a sequence of integers A = (A_1, A_2, A_3).\r\nLet B = (B_1, B_2, B_3) be any permutation of A.\r\nDetermine whether it is possible that B_1 \\times B_2 = B_3.\n\nInput\n\nThe input is given from Standard Input in the following format:\nA_1 A_2 A_3\n\nOutput\n\nIf it is possible that B_1 \\times B_2 = B_3, print Yes; otherwise, print No.\n\nConstraints\n\n\n- All input values are integers.\n- 1 \\le A_1, A_2, A_3 \\le 100\n\nSample Input 1\n\n3 15 5\n\nSample Output 1\n\nYes\r\n\nHere, A=(3,15,5).\r\nBy rearranging it as B=(3,5,15), we can satisfy B_1 \\times B_2 = B_3.\n\nSample Input 2\n\n5 3 2\n\nSample Output 2\n\nNo\r\n\nNo permutation of B satisfies B_1 \\times B_2 = B_3.", "difficulty": "easy", "starter_code": "", "public_test_cases": "[{\"input\": \"3 15 5\", \"output\": \"Yes\", \"testtype\": \"stdin\"}, {\"input\": \"5 3 2\", \"output\": \"No\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc392_g", "question_title": "Fine Triplets", "question_content": "For integers A, B, C ( A < B < C ), if they satisfy B-A = C-B, then (A, B, C) is called a fine triplet.\nYou are given a set of N distinct positive integers S = \\{ S_1, S_2, \\dots, S_N \\}. Find the number of fine triplets (A, B, C) with A, B, C \\in S.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\nS_1 S_2 \\dots S_N\n\nOutput\n\nPrint the number of fine triplets as an integer.\n\nConstraints\n\n\n- All input values are integers.\n- 1 \\le N \\le 10^6\n- 1 \\le S_i \\le 10^6\n- The elements of S are distinct.\n\nSample Input 1\n\n5\n8 3 1 5 2\n\nSample Output 1\n\n3\n\nHere, S = \\{8,3,1,5,2\\}.\nThe fine triplets to be counted are the following three:\n\n- (1,2,3)\n- (1,3,5)\n- (2,5,8)\n\nSample Input 2\n\n7\n300000 100000 499998 499999 200000 400000 500000\n\nSample Output 2\n\n5\n\nSample Input 3\n\n10\n13 1 16 15 12 4 7 10 2 19\n\nSample Output 3\n\n10", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"5\\n8 3 1 5 2\", \"output\": \"3\", \"testtype\": \"stdin\"}, {\"input\": \"7\\n300000 100000 499998 499999 200000 400000 500000\", \"output\": \"5\", \"testtype\": \"stdin\"}, {\"input\": \"10\\n13 1 16 15 12 4 7 10 2 19\", \"output\": \"10\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc393_b", "question_title": "A..B..C", "question_content": "A string S is given.\nFind how many places in S have A, B, and C in this order at even intervals.\nSpecifically, find the number of triples of integers (i,j,k) that satisfy all of the following conditions. Here, |S| denotes the length of S, and S_x denotes the x-th character of S.\n\n- 1 \\leq i < j < k \\leq |S|\n- j - i = k - j\n- S_i = A\n- S_j = B\n- S_k = C\n\nInput\n\nThe input is given from Standard Input in the following format:\nS\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- S is an uppercase English string with length between 3 and 100, inclusive.\n\nSample Input 1\n\nAABCC\n\nSample Output 1\n\n2\r\n\nThere are two triples (i,j,k) = (1,3,5) and (2,3,4) that satisfy the conditions.\n\nSample Input 2\n\nARC\n\nSample Output 2\n\n0\n\nSample Input 3\n\nAABAAABBAEDCCCD\n\nSample Output 3\n\n4", "difficulty": "easy", "starter_code": "", "public_test_cases": "[{\"input\": \"AABCC\", \"output\": \"2\", \"testtype\": \"stdin\"}, {\"input\": \"ARC\", \"output\": \"0\", \"testtype\": \"stdin\"}, {\"input\": \"AABAAABBAEDCCCD\", \"output\": \"4\", \"testtype\": \"stdin\"}]"}
{"question_id": "abc398_g", "question_title": "Not Only Tree Game", "question_content": "You are given a simple undirected graph with N vertices and M edges, with vertices labeled 1 to N and edges labeled 1 to M. The i-th edge connects vertices U_i and V_i. Initially, G does not contain an odd cycle.\nTakahashi and Aoki will play a game using this graph G. With Aoki going first, they take turns performing the following operation:\n\n- Choose a pair of integers (i,j) with 1 \\leq i < j \\leq N that satisfies both of the following conditions, then add an edge connecting vertices i and j to G.\n- G does not already have an edge connecting vertices i and j.\n- Adding an edge connecting vertices i and j does not create an odd cycle.\n\n\n\nA player who cannot perform this operation loses, and the other player wins.\nDetermine who wins when both players play optimally.\n\nWhat is an odd cycle?\nA sequence of vertices (v_0,v_1,\\ldots,v_k) of G is called an odd cycle if and only if all of the following conditions are satisfied:\n\n- k is odd.\n- v_0=v_k.\n- For every 1\\leq i \\leq k, there is an edge connecting v_{i-1} and v_{i}.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\nU_1 V_1\nU_2 V_2\n\\vdots\nU_M V_M\n\nOutput\n\nIf Aoki (the first player) wins, print Aoki; otherwise, if Takahashi (the second player) wins, print Takahashi.\n\nConstraints\n\n\n- 1 \\leq N \\leq 2\\times 10^5\n- 0 \\leq M \\leq 2\\times 10^5\n- 1 \\leq U_i < V_i \\leq N\n- The given graph does not contain an odd cycle.\n- The given graph does not contain multi-edges.\n- All input values are integers.\n\nSample Input 1\n\n4 3\n1 2\n2 3\n3 4\n\nSample Output 1\n\nAoki\n\nIf Aoki (the first player) adds the edge (1,4), Takahashi (the second player) cannot move. Thus, Aoki wins.\n\nSample Input 2\n\n4 2\n1 2\n3 4\n\nSample Output 2\n\nTakahashi\n\nNo matter how Aoki plays, Takahashi wins.\n\nSample Input 3\n\n9 5\n2 9\n2 3\n4 6\n5 7\n1 8\n\nSample Output 3\n\nAoki", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"4 3\\n1 2\\n2 3\\n3 4\", \"output\": \"Aoki\", \"testtype\": \"stdin\"}, {\"input\": \"4 2\\n1 2\\n3 4\", \"output\": \"Takahashi\", \"testtype\": \"stdin\"}, {\"input\": \"9 5\\n2 9\\n2 3\\n4 6\\n5 7\\n1 8\", \"output\": \"Aoki\", \"testtype\": \"stdin\"}]"}
{"question_id": "arc193_b", "question_title": "Broken Wheel", "question_content": "You are given a positive integer N and a length-N string s_0s_1\\ldots s_{N-1} consisting only of 0 and 1.\nConsider a simple undirected graph G with (N+1) vertices numbered 0, 1, 2, \\ldots, N, and the following edges:\n\n- For each i = 0, 1, \\ldots, N-1, there is an undirected edge between vertices i and (i+1)\\bmod N.\n- For each i = 0, 1, \\ldots, N-1, there is an undirected edge between vertices i and N if and only if s_i =  1.\n- There are no other edges.\n\nFurthermore, create a directed graph G' by assigning a direction to each edge of G. That is, for each undirected edge \\lbrace u, v \\rbrace in G, replace it with either a directed edge (u, v) from u to v or a directed edge (v, u) from v to u.\nFor each i = 0, 1, \\ldots, N, let d_i be the in-degree of vertex i in G'. Print the number, modulo 998244353, of distinct sequences (d_0, d_1, \\ldots, d_N) that can be obtained.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\ns_0s_1\\ldots s_{N-1}\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 3 \\leq N \\leq 10^6\n- N is an integer.\n- Each s_i is 0 or 1.\n\nSample Input 1\n\n3\n010\n\nSample Output 1\n\n14\n\nG has four undirected edges: \\lbrace 0, 1 \\rbrace, \\lbrace 0, 2 \\rbrace, \\lbrace 1, 2 \\rbrace, \\lbrace 1, 3 \\rbrace.\nFor example, if we assign directions to each edge as 0 \\to 1, 2 \\to 0, 2 \\to 1, 1 \\to 3, then (d_0, d_1, d_2, d_3) = (1, 2, 0, 1) is obtained.\nThe possible sequences (d_0, d_1, d_2, d_3) are\n(0, 1, 2, 1), (0, 2, 1, 1), (0, 2, 2, 0), (0, 3, 1, 0), (1, 0, 2, 1), (1, 1, 1, 1), (1, 1, 2, 0), (1, 2, 0, 1), (1, 2, 1, 0), (1, 3, 0, 0), (2, 0, 1, 1), (2, 1, 0, 1), (2, 1, 1, 0), (2, 2, 0, 0), for a total of 14.\n\nSample Input 2\n\n20\n00001100111010100101\n\nSample Output 2\n\n261339902", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"3\\n010\", \"output\": \"14\", \"testtype\": \"stdin\"}, {\"input\": \"20\\n00001100111010100101\", \"output\": \"261339902\", \"testtype\": \"stdin\"}]"}
{"question_id": "arc194_d", "question_title": "Reverse Brackets", "question_content": "A string is defined to be a valid parenthesis sequence if and only if it satisfies one of the following conditions:\n\n- It is an empty string.\n- There exists a valid parenthesis sequence A such that the string is obtained by concatenating (, A, and ) in this order.\n- There exist non-empty valid parenthesis sequences A and B such that the string is obtained by concatenating A and B in this order.\n\nYou are given a valid parenthesis sequence S of length N. You can perform the following operation any number of times:\n\n- Choose a contiguous substring of S that is a valid parenthesis sequence, and reverse it.\n\nHere, reversing the substring of S from the l-th character to the r-th character means the following:\n\n- For every integer i satisfying l \\leq i \\leq r, simultaneously replace S_i with ) if S_{l+r-i} is (, and with ( if S_{l+r-i} is ).(Note that reversing here is different from the usual definition of reversing.)\n\nFind the number, modulo 998244353, of distinct strings S that you can have at the end of the process.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nS\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- 1 \\leq N \\leq 5000\n- |S| = N\n- S is a valid parenthesis sequence.\n\nSample Input 1\n\n6\r\n(())()\n\nSample Output 1\n\n2\r\n\nFor example, you can transform S into ()(()) by doing the following:\n\n- Choose the substring from the 1st to the 6th character of S. This is a valid parenthesis sequence. S becomes ()(()).\n\nThe only other string that can be formed is (())(). Thus, the answer is 2.\n\nSample Input 2\n\n2\r\n()\n\nSample Output 2\n\n1", "difficulty": "hard", "starter_code": "", "public_test_cases": "[{\"input\": \"6\\n(())()\", \"output\": \"2\", \"testtype\": \"stdin\"}, {\"input\": \"2\\n()\", \"output\": \"1\", \"testtype\": \"stdin\"}]"}
{"question_id": "arc195_a", "question_title": "Twice Subsequence", "question_content": "There is a sequence A = (A_1,\\dots,A_N). Determine whether there are at least two subsequences of A that match the sequence B = (B_1,\\dots,B_M). Two subsequences are distinguished if they are taken from different positions, even if they coincide as sequences.\n\nSubsequence\nA subsequence of A is a sequence obtained by removing zero or more elements from A and leaving the remaining elements in their original order.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\nA_1 A_2 \\ldots A_N\nB_1 B_2 \\ldots B_M\n\nOutput\n\nIf there are at least two subsequences of A that match B, print Yes. Otherwise, print No.\n\nConstraints\n\n\n- 1 \\leq M \\leq N \\leq 2\\times 10^5\n- 1 \\leq A_i \\leq 10^9\n- 1 \\leq B_i \\leq 10^9\n- All input values are integers.\n\nSample Input 1\n\n4 2\n1 2 1 2\n1 2\n\nSample Output 1\n\nYes\n\nThere are three subsequences of A that match B: (A_1,A_2), (A_1,A_4), (A_3,A_4).\n\nSample Input 2\n\n3 2\n1 2 1\n1 2\n\nSample Output 2\n\nNo\n\nThere is only one subsequence of A that matches B: (A_1,A_2).\n\nSample Input 3\n\n3 2\n1 1 2\n2 1\n\nSample Output 3\n\nNo\n\nThere are no subsequences of A that match B.", "difficulty": "medium", "starter_code": "", "public_test_cases": "[{\"input\": \"4 2\\n1 2 1 2\\n1 2\", \"output\": \"Yes\", \"testtype\": \"stdin\"}, {\"input\": \"3 2\\n1 2 1\\n1 2\", \"output\": \"No\", \"testtype\": \"stdin\"}, {\"input\": \"3 2\\n1 1 2\\n2 1\", \"output\": \"No\", \"testtype\": \"stdin\"}]"}
{"question_id": "3759", "question_title": "choose-k-elements-with-maximum-sum", "question_content": "You are given two integer arrays, nums1 and nums2, both of length n, along with a positive integer k.\nFor each index i from 0 to n - 1, perform the following:\n\nFind all indices j where nums1[j] is less than nums1[i].\nChoose at most k values of nums2[j] at these indices to maximize the total sum.\n\nReturn an array answer of size n, where answer[i] represents the result for the corresponding index i.\n \nExample 1:\n\nInput: nums1 = [4,2,1,5,3], nums2 = [10,20,30,40,50], k = 2\nOutput: [80,30,0,80,50]\nExplanation:\n\nFor i = 0: Select the 2 largest values from nums2 at indices [1, 2, 4] where nums1[j] < nums1[0], resulting in 50 + 30 = 80.\nFor i = 1: Select the 2 largest values from nums2 at index [2] where nums1[j] < nums1[1], resulting in 30.\nFor i = 2: No indices satisfy nums1[j] < nums1[2], resulting in 0.\nFor i = 3: Select the 2 largest values from nums2 at indices [0, 1, 2, 4] where nums1[j] < nums1[3], resulting in 50 + 30 = 80.\nFor i = 4: Select the 2 largest values from nums2 at indices [1, 2] where nums1[j] < nums1[4], resulting in 30 + 20 = 50.\n\n\nExample 2:\n\nInput: nums1 = [2,2,2,2], nums2 = [3,1,2,3], k = 1\nOutput: [0,0,0,0]\nExplanation:\nSince all elements in nums1 are equal, no indices satisfy the condition nums1[j] < nums1[i] for any i, resulting in 0 for all positions.\n\n \nConstraints:\n\nn == nums1.length == nums2.length\n1 <= n <= 10^5\n1 <= nums1[i], nums2[i] <= 10^6\n1 <= k <= n", "difficulty": "medium", "starter_code": "class Solution:\n    def findMaxSum(self, nums1: List[int], nums2: List[int], k: int) -> List[int]:\n        ", "public_test_cases": "[{\"input\": \"[4, 2, 1, 5, 3]\\n[10, 20, 30, 40, 50]\\n2\", \"output\": \"[80, 30, 0, 80, 50]\", \"testtype\": \"functional\"}, {\"input\": \"[2, 2, 2, 2]\\n[3, 1, 2, 3]\\n1\", \"output\": \"[0, 0, 0, 0]\", \"testtype\": \"functional\"}]"}
