question_id: 3395
==================================================

QUESTION TITLE:
--------------------
minimum-length-of-anagram-concatenation

DIFFICULTY:
--------------------
medium

QUESTION CONTENT:
--------------------
You are given a string s, which is known to be a concatenation of anagrams of some string t.
Return the minimum possible length of the string t.
An anagram is formed by rearranging the letters of a string. For example, "aab", "aba", and, "baa" are anagrams of "aab".
 
Example 1:

Input: s = "abba"
Output: 2
Explanation:
One possible string t could be "ba".

Example 2:

Input: s = "cdef"
Output: 4
Explanation:
One possible string t could be "cdef", notice that t can be equal to s.

 
Constraints:

1 <= s.length <= 10^5
s consist only of lowercase English letters.

STARTER CODE:
--------------------
class Solution:
    def minAnagramLength(self, s: str) -> int:
        

PUBLIC TEST CASES:
--------------------
Test Case 1:
  Input: "abba"
  Output: 2
  Type: functional

Test Case 2:
  Input: "cdef"
  Output: 4
  Type: functional

