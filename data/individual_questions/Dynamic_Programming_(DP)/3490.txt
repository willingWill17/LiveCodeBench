question_id: 3490
==================================================

QUESTION TITLE:
--------------------
find-the-maximum-length-of-valid-subsequence-i

DIFFICULTY:
--------------------
medium

QUESTION CONTENT:
--------------------
You are given an integer array nums.
A subsequence sub of nums with length x is called valid if it satisfies:

(sub[0] + sub[1]) % 2 == (sub[1] + sub[2]) % 2 == ... == (sub[x - 2] + sub[x - 1]) % 2.

Return the length of the longest valid subsequence of nums.
A subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.
 
Example 1:

Input: nums = [1,2,3,4]
Output: 4
Explanation:
The longest valid subsequence is [1, 2, 3, 4].

Example 2:

Input: nums = [1,2,1,1,2,1,2]
Output: 6
Explanation:
The longest valid subsequence is [1, 2, 1, 2, 1, 2].

Example 3:

Input: nums = [1,3]
Output: 2
Explanation:
The longest valid subsequence is [1, 3].

 
Constraints:

2 <= nums.length <= 2 * 10^5
1 <= nums[i] <= 10^7

STARTER CODE:
--------------------
class Solution:
    def maximumLength(self, nums: List[int]) -> int:
        

PUBLIC TEST CASES:
--------------------
Test Case 1:
  Input: [1, 2, 3, 4]
  Output: 4
  Type: functional

Test Case 2:
  Input: [1, 2, 1, 1, 2, 1, 2]
  Output: 6
  Type: functional

Test Case 3:
  Input: [1, 3]
  Output: 2
  Type: functional

